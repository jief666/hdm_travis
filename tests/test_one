#!/bin/bash
SCRIPT_ABS_FILENAME=`LC_ALL=en_US.ISO8859-1 perl -e 'use Cwd "abs_path";print abs_path(shift)' "${BASH_SOURCE[0]}"`
SCRIPT_DIR=`dirname "$SCRIPT_ABS_FILENAME"`

cd "$SCRIPT_DIR"

path=$1

set -x

echo '=============================================================>' Testing $(basename "$1")

mkdir -p mnt_hdiutil
mkdir -p mnt_fuse

diskutil eject mnt_hdiutil >/dev/null 2>&1 # just in case
umount mnt_fuse >/dev/null 2>&1 # just in case

echo -n "foo" | hdiutil attach -mountpoint mnt_hdiutil -readonly -owners on "$path" -stdinpass >/dev/null
if ! [ $? -eq 0 ]
then
  echo cannot mount "$path"
  exit 1
fi
diskids=( $(echo -n "foo" | hdiutil attach -mountpoint mnt_hdiutil -readonly -owners on "$path" -stdinpass  | awk '{if ($1) print $1}') )

#/JiefLand/5.Devel/Syno/Fuse/darling-dmg--darlinghq--master/DerivedData/darling-dmg--darlinghq--master/Build/Products/Debug/darling-dmg--darlinghq--master "$path" mnt_fuse >/dev/null 2>&1 &
"/JiefLand/5.Devel/Syno/Fuse/hdimount--jief666--wip/hdimount--jief666--wip.xcodeproj/DerivedData/hdimount--jief666--wip/Build/Products/Debug/hdimount--jief666--wip openssl" "$path" mnt_fuse >hdimount_log 2>&1 &
#jobs %%

#hdimount_ret=$?
#if ! [ $hdimount_ret -eq 0 ]
#then
#  "/JiefLand/5.Devel/Syno/Fuse/hdimount--jief666--wip/hdimount--jief666--wip.xcodeproj/DerivedData/hdimount--jief666--wip/Build/Products/Debug/hdimount--jief666--wip openssl" "$path" mnt_fuse
#  echo cannot mount "$path" with hdimount
#  exit 1
#fi

sleep 0.5 #extra safety

rc=1
while [[ $rc != 0 ]]
do
    mount | grep "$SCRIPT_DIR"/mnt_fuse >/dev/null 2>&1
    rc=$?
    if [[ $rc = 0 ]]
    then
        # ok, it's mounted
        sleep 0.5 #extra safety
    else
        if jobs 1 >/dev/null 2>&1
        then
            #echo   "$0: no apfs-fuse mount yet. Retry in 1 second"
            sleep 1
        else
            cat hdimount_log
            echo cannot mount "$path" with hdimount
            exit 1
        fi
    fi
done

./test_one_2 "$path"
ret=$?

#diskutil eject mnt_hdiutil >/dev/null
umount mnt_fuse >/dev/null

for (( idx=${#diskids[@]}-1 ; idx>=0 ; idx-- ))
do
    diskutil list | grep "${diskids[idx]}" >/dev/null 2>&1
    rc=$?
    if [[ $rc = 0 ]]
    then
        diskutil eject "${diskids[idx]}"
    fi
done

exit $ret
